reanger
cd .config/zsh/
cd ~/.local/bin
which dev
vdir
dir
which dir
brew 
brew --prefix
source ~/.profile
source .zshenv
chmod go-w '/opt/homebrew/share'\
  chmod -R go-w '/opt/homebrew/share/zsh'
code .zshenv
touch .zprofile
cat -v
cat --help
rm -f .zprofile
cat .zshrc
rm -f .zshrc
rm -f .zsh_history
export ZDOTDIR="$HOME/.config/zsh"
code .zprofile
rm -f .zcompdump
echo $HOME
cd cldear
Public
echo " "
/bin/cat -v
brew install showkey
showkey -a
echo " "
cd clear
bindkey -L | grep [B
bindkey -L | grep -F "[B"
bindkey -L | grep "[B"
bindkey -L
bindkey -L | grep "\[B"
bindkey -L 
bindkey -M
bindkey
source .config/zsh/.zshrc
brew link --overwrite pnpm --dry-run
brew link --overwrite pnpm
rm '/opt/homebrew/bin/pnpm'
brew link pnpm
brew unlink pnpm && brew link pnpm
pnpm --version
brew untap Homebrew/homebrew-services
brew install zsh zsh-completions
brew uninstall zsh-syntax-highlighting zsh-history-substring-search zsh-vi-mode zsh-autocomplete zsh-autosuggestions zsh-fzf
brew uninstall zsh-syntax-highlighting zsh-history-substring-search zsh-vi-mode zsh-autocomplete zsh-autosuggestions
git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf\
~/.fzf/install
cat .fzf.zsh
code .fzf.zsh
fzf --zsh > out.txt && code out.txt
brew install zsh-syntax-highlighting zsh-autocomplete
brew install zsh-syntax-highlighting zsh-history-substring-search zsh-vi-mode zsh-autocomplete zsh-autosuggestions
brew install zsh-history-substring-search
brew reinstall zsh-history-substring-search
brew reinstall zsh-syntax-highlighting
rbenv init - zsh
brew reinstall zsh-autocomplete
clar
touch .zshrc
open .zshrc
brew reinstall zsh
which zsh
echo $ZDOTDIR
bat .zshrc
rm -f out.txt
code .zshrc
code .config/zsh/.zshrc
brew install zsh
sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
chmod -R go-w "$(brew --prefix)/share"
brew install zsh-completions
brew reinstall zsh-completions
uninstall_oh_my_zsh()
uninstall_oh_my_zsh
code uninstall.sh
sh uninstall.sh
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
brew help
brew reinstall zsh-autosuggestions
brew uninstall surrealdb/tap
brew uninstall surrealdb
brew uninstall surreal
brew clean
brew cleanup
brew uninstall graphite
rm -fdr /opt/homebrew/Library/Taps/surrealdb
brew doctor
brew uninstall zsh-autocompletions
brew uninstall zsh-autocomplete zsh-completions
brew uninstall zsh
brew info
brew --help
brew list
brew uninstall zsh-autosuggestions zsh-history-substring-search zsh-syntax-highlighting zsh-vi-mode
brew uninstall zsh-history-substring-search zsh-syntax-highlighting zsh-vi-mode
cd $ZDOTDIR
ls -la
rm -f .zshrc.pre-oh-my-zsh
brew install zsh-history-substring-search zsh-syntax-highlighting
rm -f .zshrc.omz-uninstalled-2025-03-27_18-27-17
brew list zsh
brew list | grep zsh
brew uninstall zsh-autosuggestions
echo $ZSH_HIGHLIGHT_HIGHLIGHTERS_DIR
brew install zsh-autosuggestions
brew install zsh-autocomplete
brew install zsh-vi-mode
z zsh
  rm -f ~/.zcompdump; compinit
dev
cd docs/assets
cd /Users/natew/.config/nvim
nvim ~/.config/nvim/lua/config/lazy.lua
code ~/.config/nvim/lua/config/lazy.lua
brew install lua@5.1
brew install neovim
brew reinstall neovim
cd lua
mkdir plugins
nvim config/lazy.lua
nvim plugins/telescope.lua
nvim plugins/mason.lua
nvim plugins/treesitter.lua
clea
nvim ../init.lua
rm -f ../init.lua
nvim remap.lua
nvim .env
which pnpm
pnpm add -g pnpm
pnpm self-update
brew clear
nvim /Users/natew/.config/zsh/.zshrc
code ~/.config/zsh/.zshrc
which precmd
which clear
lua --help
nvim .config/alacritty/alacritty.toml
nvim .tmux.conf.local
nvim ~/.config/alacritty/themes/dracula-pro-van-helsing.toml
code ~/.tmux.conf.local
code ~/.config/alacritty/themes/dracula-pro-van-helsing.toml
brew install reattach-to-user-namespace
 fc-list | grep -i awesome 
exec zsh
brew install zsh-system-clipboard
brew reinstall zsh-vi-mode
doom sync --source /Users/natew/.config/zsh/.zshrc && clear
doom upgrade && doom sync --aot --rebuild
brew upgrade && brew doctor
brew update
brew
alias tmux
tmux new
source ~/.zshrc
source /Users/natew/.config/zsh/.zshrc
animal_fact\
\
\
\

exit\
\
\

ps 
tmux -CC
tmux -CC attach
clear\

ls\
\
\
\
\

tldr find
nvim .tmux.conf
find . -type f -perm +ugo+x -print tmux
find . -type f -perm +ugo+x -print
brew install ripgrep
rg --help
rg --help | grep color
cargo uninstall rg
cargo uninstall ripgrep
which rg
zsh -c tmux attach || tmux
zsh -c "tmux attach || tmux"
zsh --login -c "tmux attach || tmux"
cp .tmux.conf.local .tmux.conf.local.bak
which grep
echo $TMUX
tmux show -g
ls ~/.config/tmux
rm -f .tmux.conf .tmux.conf.local
git clone --single-branch https://github.com/gpakosz/.tmux.git .config
git clone --single-branch https://github.com/gpakosz/.tmux.git .config/oh-my-zsh
mkdir -p "~/.config/tmux"
mv oh-my-zsh oh-my-tmux
mkdir tmux
ln -s oh-my-tmux/.tmux.conf tmux/tmux.conf
cp oh-my-tmux/.tmux.conf.local tmux/tmux.conf.local
sudo kill $(pidof tmux)
mv tmux.conf.local .tmux.conf.local
rm -f tmux.conf
rm -fdr .tmux
git clone --single-branch https://github.com/gpakosz/.tmux.git\

ln -s -f .tmux/.tmux.conf\

cp .tmux/.tmux.conf.local .
htop
weather
brew tap arl/arl
git push --set-upstream origin form-db-schema-rework
git restore --staged .
cd src
brew install gitmux
gitmux -printcfg > $HOME/.gitmux.conf
code $HOME/.gitmux.conf\

brew install fpp
git switch d0d518387
touch ~/.config/test.sh
code ~/.config/test.sh
sh .config/test.sh
doom sync && doom doctor
doom 
doom env
doom sync --aot --rebuild
tmux -v
tmux --v
tmux --version
which tmux
brew install tmux
brew install alacritty
doom doctor
doom upgrade && doom sync --aot && doom doctor
doom gc
doom sync
doom upgrade && doom sync --aot --rebuild && doom doctor
doom sync --aot --rebuild 
ulimit -n 1024
doom sync --aot --rebuild -j 12
printf "%s " "${ANIMALS_ARRAY[$((RANDOM % ${#ANIMALS_ARRAY[@]}))]}"\

echo $ANIMALS_ARRAY
 ,
cat .z
brew services help
brew services restart emacs
brew list | grep emacs
brew services restart emacs-plus
brew services restart emacs-plus@29
cd /Users/natew/Datatank/code/datatank
brew install w3m
which w3mimgpreview
brew install w3mimgpreview
git config --global gpg.program $(which gpg)
brew install calibre
calibre
npx next --version
brew reinstall pgadmin4
which aa
man aa
aa list
pnpm add eslint-plugin-drizzle\
pnpm add @typescript-eslint/eslint-plugin @typescript-eslint/parser
glog | head
gcheck form-db-schema-rework 
git merge applicants-form-rework 
git branch -D docs-setup 
ls --tree src
speedtest-cli
pnpm
cat package.json | rg lint
pnpm preview
pnpm fmt
gcheck -b date-input-updates
which gcheck
brew install fastfetch
brew install nerdfetch
brew install neofetch
brew uninstall neofetch
nerdfetch
fastfetch --gen-config
emacs ~/.config/fastfetch/config.jsonc
fastfetch
fastfetch --list-logos
fastfetch -l Apple_small
swapon --show\

fastfetch --list-modules
java --version
pnpm i validator
pnpm install --save @types/validator
pnpm i install react-tailwindcss-datepicker
npx tailwindcss init
pnpm add day.js
pnpm add dayjs
cat package.json | react
cat package.json | rg react
pnpm add 
pnpm add react-tailwindcss-datepicker@1.7.3
cat package.json | rg day
pnpm add dayjs@1.11.12
pnpm uninstall react-tailwindcss-datepicker
pnpm add react-tailwindcss-datepicker
pnpm add flowbite-datepicker --save
tmux attach || tmux
ledger -f /Users/natew/Org/finance/april-2025.ledger bal
pnpm db:push && pnpm db:studioL
pkill pnpm
git merge ownership-percentage-validation 
code src/app/_components/forms/pages/NewProfileForm/NewProfileFormController.tsx
code src/app/_components/loading/LoadingFormData.tsx 
git merge --continue 
yt-dlp "https://youtube.com/playlist?list=PLsdeyaANHf2jya6dlXj9ssSUBc5sPzmw5&si=fqYTvb7_LNHGqRX0"
yt-dlp "https://youtube.com/playlist?list=PLsdeyaANHf2hOjtaYdxd5ZLZMYSF8MEYQ&si=RwjZ6Mfn1yEwNSP1" --list-formats
yt-dlp "https://youtube.com/playlist?list=PLsdeyaANHf2hOjtaYdxd5ZLZMYSF8MEYQ&si=RwjZ6Mfn1yEwNSP1"
yt-dlp " www.youtube.com/@kaseyrussell2220 "
yt-dlp "https://www.youtube.com/@kaseyrussell2220/playlists?view=1&sort=dd&shelf_id=5"
brew install gimp
gimp
yt-dlp "https://youtube.com/playlist?list=PLsdeyaANHf2jmFsrM6qTR9lJw9XtRXXqr&si=Q3XwUi8UfICTaS9w"
cd /Volumes/MARVIN/Music/Rnb
cls
cat package.json 
code package.json
python3
pnpm install && pnpm build
git checkout c3ad59a56 -- package.json
pnpm i
pnpm env --help
rm -fdr node_modules .next
pnpm i && pnpm build
cd ../old-repo/
npm dev
npm run dev
git stash shopw
vercel env pull
pnpm i use-debounce
pnpm add tailwind-scrollbar
pnpm add csv-parse
yt-dlp "https://youtube.com/playlist?list=PLsdeyaANHf2jcYpAwfp8SN0Xa-5-GqvPl&si=JDKJMpGuMovjtF15"
code ~/.config/alacritty/alacritty.toml
gcheck locations-page
git merge search-page
git push -u origin 
git push -u origin locations-page 
git push 
git merge locations-page 
gcheck -b info-page-updates
/Users/natew/Downloads/Zen/Forever\ World\ 2/fabric-server-launch.jar
cd ~
git branch -D contacts-validators-fixes 
gcheck -b hint-text-updates
git merge dev
git merge dev -X theirs
git commit --amend -m "Merge new changes for Scott to test"
git commit -m "Fix build error"
git commit --amend --no-edit 
git reset 61a4edd7d
git add src/app/_components/buttons/LinkButton.tsx
pnpm lint
gcheck -b roof-input-updates
rm -fdr .next
git branch -m contacts-validators-fixes
git merge contacts-validators-fixes 
java -Xmx4G -jar fabric-server-launch.jar nogui
curl -OJ https://meta.fabricmc.net/v2/versions/loader/1.21.5/0.16.14/1.0.3/server/jar
java -Xmx2G -jar fabric-server-mc.1.21.5-loader.0.16.14-launcher.1.0.3.jar nogui
java -Xmx8G -jar fabric-server-mc.1.21.5-loader.0.16.14-launcher.1.0.3.jar nogui
gcheck -b nature-of-business-form
~
yt-dlp "https://www.youtube.com/watch?v=4h4Ls-MDhBE&list=PL8RARzxYAJTQ8g9F9WzX3xbCaFOWYKvhT&index=10"
cd Music/Youtube
cd NA
yt-dlp "https://youtube.com/playlist?list=PL8RARzxYAJTQ8g9F9WzX3xbCaFOWYKvhT&si=0mzr3jyAzIeJ1YhA"
pnpm start
npx next dev
pnpm db:push && pnpm db:studiol
pnpm db:push && pnpm db:studio;
pnpm db:studio
git prune
glog dev
 git stash -- src/server/db/actions/locations.ts 
git stash show -v
git stash show
git stash show stash@{1} -v
git stash pop stash@{1}
git checkout main -- src/app/api/v1/_utils/codes/useCodeById.ts 
git checkout main -- src/app/api/v1/codes
git checkout demo -- src/app/api/v1/codes
git config --global merge.conflictstyle diff3
git stash list
git commit -m "Manually set editing to false for code search"
git merge main -X ours 
git pull --force
git fech
git fetch origin 
git reset origin/demo
git branch | less
alias less
less
git branch | bat
git branch | grep info
git branch -v
git log --oneline 
git reset demo
rm -f src/app/_components/forms/pages/NewProfileForm/ProgressBar.tsx
git branch -m form-detail-page
git push -u origin form-detail-page 
git merge --commit 
yt-dlp "https://youtube.com/playlist?list=PLsdeyaANHf2gRyz3gMHuWB4Vr4oUeeiak&si=mP-n8l4oYyQMl-72"; yt-dlp "https://youtube.com/playlist?list=PLsdeyaANHf2gRyz3gMHuWB4Vr4oUeeiak&si=mP-n8l4oYyQMl-72"
yt-dlp "https://youtube.com/playlist?list=PLsdeyaANHf2gRyz3gMHuWB4Vr4oUeeiak&si=mP-n8l4oYyQMl-72"
gcheck
git merge main -X theirs 
gcheck form-info-page
gcheck form-detail-page 
gcheck -b feedback
git reset bc6ddd0d3
git commit -m "Set occupied area field to be required"
git commit -m "Update error message for premium field"
git stash
gcheck min
gcheck main 
gcheck feedback 
git show -v
git push -u origin feedback 
git commit -m "Update error message for years/months at address"
git stash pop
git merge main
git merge --abort 
git merge main -X ours
git restore src/app/agent/profiles/\[profileId\]/forms/info/page.tsx
git checkout fd1ffd2ba -- src/app/agent/profiles/\[profileId\]/forms/info/page.tsx
gcheck -b overview-tab
git merge overview-tab 
code banned-players.json
cd ~/Games/Forever\ World\ Server
cd ~/Datatank/code/datatank
pnpm build && pnpm start
git commit -m "Fix issue with loading contacts from db"
git push
pnpm lint:fix
git commit -m "Comment out buggy element for demo"
git branch -D address-form applicants-form-page applicants-form-performance-enhancements applicants-form-rework building-info-updates codes-section contact-form contact-form-updates contacts-form-page date-input-updates feedback form-db-schema-rework form-detail-page form-improvements hint-text-updates info-page-updates initial-profile-form-rework locations-page nature-of-business-form nw-branch-1 overview-tab ownership-percentage-validation search-page search-param-form-pages
./start-database.sh
pnpm db:push && pnpm db:studio
git rebase cleanup --autosquash 
git rebase demo --autosquash 
git merge cleanup --squash --commit -m "Squash test"
git merge cleanup --squash -m "Squash test"
git rebase demo
gcheck test
git rebase temo
git rebase temp
git merge temp 
git branch -D temp test 
git rebase demo rebase
git rebase demo cleanup 
git rebase cleanup demo
git rebase dev demo
git rebase demo dev
git branch -D cleanup 
bash
open eula.txt
cat eula.txt
vim eula.txt
java -Xmx4G -jar fabric-server-mc.1.21.5-loader.0.16.14-launcher.1.0.3.jar nogui
vim server.properties
cd ~/Games
cd Forever\ World\ Server
mkdir archive
mv Forever\ World\ Server archive
mv Minecraft\ Server archive
ls archive
mkdir server
cd server
mv server local
cd local
open .
git branch -D new-profile-form-updates 
git branch
gcheck dev 
git merge demo
gcheck -b comments
pnpm dev
git branch -m cleanup
git commit -m "Clean up TODO comments"
git commit -m "Clean up some IDEA comments"
pnpm build
git commit -m "Clean up zustand def page"
git commit -m "Clean up unsued params" 
tldr git merge
gcheck -b test
git merge cleanup --squash
git reset --hard ~HEAD
git reset --hard HEAD~
git rebase --interactive cleanup 
git rebase cleanup --autosquash
git reset --hard demo
git rebase --help
gcheck cleanup 
gcheck temp
gcheck -b temp
git merge --help
git pull
gcheck dev
git push --force
curl -O https://download.swift.org/swiftly/darwin/swiftly.pkg && \\
installer -pkg swiftly.pkg -target CurrentUserHomeDirectory && \\
~/.swiftly/bin/swiftly init --quiet-shell-followup && \\
. ${SWIFTLY_HOME_DIR:-~/.swiftly}/env.sh && \\
hash -r\

swift -version 
cd ~/Code/apple/research
rm -fdr ../test
mkdir docs
git clone https://github.com/swiftlang/swift-book.git
cd swift-book
cd ~/Code/docs/
git clone https://github.com/vercel/next.js/tree/canary/docs
git clone https://github.com/vercel/next.js/tree/v15.3.3/docs
git clone https://github.com/vercel/next.js.git
mv next.js/docs .
mv docs next
mv swift-book swift
cd swift
docc preview TSPL.docc
cd ~/Code/apple/sandbox
vim hello.swift
swift
swift repl
/usr/libexec/java_home -v 23.0.2
java -v
brew reinstall openjdk
/usr/libexec/java_home
/usr/libexec/java_home -v 23
brew install openjdk
brew install java
/usr/local/opt/openjdk
/usr/libexec/java_home -v
/usr/libexec/java_home -V 23
brew info java
sudo ln -sfn /opt/homebrew/opt/openjdk/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk.jdk
/usr/libexec/java_home -V
java -version
cd ~/Games/local
java -Xmx8G -jar fabric-server.jar nogui
11
java -Xmx4G -jar fabric-server.jar nogui
black 
black Equal\ Risk\ Dow\ 30.ipynb
git commit -m "Fix errors that dad found"
cd ~/Code/tws/jupyter
ls rust
rm -fdr rust
cargo install sudoku-tui
sudoku
cargo install clock-cli
clock
clock 3 minutes
mkdir equal-risk
cd equal-risk
mkdir backend
cd backend
cd ~/Code/
mv apple swift
ls config
rm -fdr ez-eap
rm -fdr ladybird editor streaks schmoney
ls repos
ls repos/gitit
cat repos/gitit/README.md
rm -fdr repos/create-t3-app repos/gitit repos/ruby repos/starship 
ls bin
mkdir rust
cd rust
gh auth
gh auth logout
gh auth login
git config 
git config --global user.name "nathanwhyte35@gmail.com"
git config --global user.email "nathanwhyte35@gmail.com"
git config --global user.name "Nathan Whyte"
git config list
cargo install --locked cargo-generate\
cargo generate ratatui/templates
cd hello-tui
cargo docs
cargo --list
cd docs
ls next
ls next.js
rm -fdr next next.js
cd rust/hello-tui
rm -fdr hello-tui
cargo add counter-tui
cargo new counter-tui
git commit -m "Initial commit, generate project from template"
cargo add ratatui crossterm
git commit -m "Add ratatui to deps"
cargo build
cargo test
bacon
git commit -m "Add basic app code from tutorial page"
rustup --help
rustup update
rustup default stable
whoami
neofetch
cargo add color_eyre
git commit -m "Add color_eyre to deps"
brew tap azorng/material\
brew install material
material
brew install television
cat Cargo.toml
git diff | cat
cat
alias cat
git config --global core.pager "bat"
git config --global pager.diff "bat"
bat
git diff | bat
echo $EDITOR
source  
python -m venv .
echo "" > .gitignore
cat .gitignore
brew install wget
tldr wget
tldr curl
curl http://127.0.0.1:8000 items/5?q=somequery
vim main.py
curl http://127.0.0.1:8000/items/5?q=somequery
git add main.py
rm -f .git/index.lock
vim requirements.txt
cd ~/.config
code yazi/yazi.toml
code yazi/init.lua
ya pkg add yazi-rs/plugins:full-border
cd yazi
brew install piper
brew install hexyl
ya pkg add yazi-rs/plugins:piper
brew install glow
code keymap.toml
ya pkg delete yazi-rs/plugins:vcs-files
speedtest
git commit --amend --no-edit
mv main_1_1.py main.py
mv main.py app
cat app/main.py 
brew install docker
mkdir -p ~/.docker/completions
docker completion zsh > ~/.docker/completions/_docker\

which z
ya pkg add yazi-rs/plugins:vcs-files
yazi ~/Code/tws/equal-risk/
nvim /Users/natew/.config/alacritty/alacritty.toml 
tv .
mkdir -p "$(bat --config-dir)/themes"\
cd "$(bat --config-dir)/themes"
ls ..
bat --completion zsh
touch ../bat-completions.sh
bat --completion zsh > ../bat-completions.sh
vim ../bat-completions.sh
vim theme.toml
vim theme.toml 
vim yazi.toml 
ya pkg add yazi-rs/flavors:dracula
ya pkg add Rolv-Apneseth/starship
ya pkg add yazi-rs/plugins:mactag\
brew update && brew install tag
vim keymap.toml
y
nvim default_channels.toml
nvim custom_channels.toml
fd -t f . $HOME/.config
fd -t f . $HOME/.config | grep zsh
tldr fd
fd -tH f . $HOME/.config 
fd -t --hidden f . $HOME/.config 
fd --hidden -t f . $HOME/.config
fd --hidden -E emacs -t f . $HOME/.config
fd --hidden -E "(emacs|git)" -t f . $HOME/.config
vim custom_channels.toml
mv custom_channels.toml custom-channels.toml
rm -fdr .config/television
brew reinstall television
echo $HISTFILE
cd television
tldr cut
cat $HISTFILE
tldr tail
tldr -r /Users/natew/.config/zsh/.histfile
vim $HISTFILE
vim config.toml 
vim default_channels.toml 
bat cache --build
bat config
bat bat-completions.sh
cd .config/zsh
cd ~/.config/zsh
vim .zsh
vim .zshrc 
tv alias
tv hidden
tv files
fd -I -t f
fd --hidden -t f
fd -I --hidden -t f
fd --no-ignore --hidden -t f
fd --hidden -E "{emacs,git}" -t f . $HOME/.config
fd --hidden --exclude "{emacs,git}" -t f . $HOME/.config
fd --hidden --exclude "{emacs,.git}" -t f . $HOME/.config | grep git
fd --hidden --exclude "{emacs,.git}" -t f . $HOME/.config
fd --hidden --exclude "{emacs,.git}" --type f $HOME/.config
fd --hidden --exclude "{emacs,.git}" --type f /Users/natew/.config
fd --hidden --exclude "{emacs,.git}" --type f . $HOME/.config
bat .zshrc 
echo $BAT_THEME
export BAT_THEME=""
vim .zshrc
cd counter-tui
tail -r /Users/natew/.config/zsh/.histfile
bat --style="numbers,changes,header" src/main.rs
bat src/main.rs
git diff --name-only --relative --diff-filter=d | xargs bat --diff
ls ~ | grep zsh
ls ~
ls ~ | grep z
rm -fdr ~/.z 
vim ~/.zprofile
vim ~/.fzf.zsh
rm -fdr .trunk
eza -la --color=auto
batman
cp --help | bat -plhelp
cp -H | bat -plhelp
cargo --help | bat -plhelp
cargo --help
git diff --help
man 1 git-diff
export MANPAGER="sh -c 'sed -u -e \"s/\\x1B\[[0-9;]*m//g; s/.\\x08//g\" | bat -p -lman'"\
man 2 select
man git
bat -l rs
git show | bat -l rs
git show src/main.rs
git show src/main.rs | bat -l rs
git show ~HEAD src/main.rs
tv git-reflog
git show HEAD src/main.rs
git show f388b5f src/main.rs | bat -l rs
bat hello | xclip
export MANPAGER="sh -c 'sed -u -e \"s/\\x1B\[[0-9;]*m//g; s/.\\x08//g\" | bat -p -lman'"\
man pdcopy
export MANPAGER="sh -c 'sed -u -e \"s/\\x1B\[[0-9;]*m//g; s/.\\x08//g\" | bat -p -lman'"\
man pbcpoy
export MANPAGER="sh -c 'sed -u -e \"s/\\x1B\[[0-9;]*m//g; s/.\\x08//g\" | bat -p -lman'"\
man pbcopy
bat "hello" | pbcopy
paste --help
tldr paste
cat src/main.rs 
cat src/main.rs | clip
brew install bat-extras
batman git
man pbcopy
which batman
.gitconfig 
vim .gitconfig 
echo $PAGER
bat | pbcopy
cat src/main.rs
vim Cargo.toml
delta --help
echo $COLORTERM
ps
source /Users/natew/Code/tws/equal-risk/backend/bin/activate
diff
bdiff
code plugins
yazi ~/Code/tws/equal-risk/backend
cd ~/.config/yazi
vim yazi.toml
eval $(tv init zsh)
eval "$(tv init zsh)"
man zle
tldr zle
zle
zle --help
zle -h
which zle
fzf
tmux attach
tldr rmdir
vim themes/van-helsing.toml
cd ~/.config/bat/
bat --config-file
rm -f config
bat --generate-config-file
bat --list-themes
vim config
fzf --zsh | bgrep bindj
fzf --zsh | bgrep bind
fzf --zs
fzf --zsh
batman git-diff
batman --export-env
man git-diff
ls ~ | batgrep z
ls | batgrep cargo
ls | batgrep Cargo
tail -r $HISTFILE | grep zsh
tail -r $HISTFILE | batgrep zsh
echo $terminfo
echo $TERM
echo $termcap
tput cols
bat src/main.rs | bgrep --terminal-width $(tput cols)
bat src/main.rs | bgrep --terminal-width $((tput cols) - 1) //
bat src/main.rs | bgrep --terminal-width=$((tput cols) - 1) //
bat src/main.rs | bgrep --terminal-width $(($(tput cols) - 1)) //
bat src/main.rs | bgrep --terminal-width $(tput cols) //
bat src/main.rs | bgrep //
brew install git-delta
vim src/main.rs
git restore src/main.rs 
git status
git restore --staged src/main.rs
batdiff
vim ~/.gitconfig
rm -fdr plugins/git.yazi
vim package.toml
ya pkg add yazi-rs/plugins:git
\:w
code .
yazi ~/Code/rust/counter-tui
yazi 
ya pack -a Ape/simple-status
ya pkg -a Ape/simple-status
ya pkg add Ape/simple-status
vim -o init.lua plugins/git.yazi
ya pkg add imsi32/yatline
git log requirements.txt 
git branch -D demo 
curl http://127.0.0.1/
curl http://127.0.0.1
cd ~/Code/tws/equal-risk/backend
;s
gdiff
git diff
git commit -m "Add PUT example"
gcheck -b demo
gcheck demo
gcheck -
gcheck main
git reset --hard 73f5680
cat cache
git checkout demo -- requirements.txt
git diff --staged 
git shwo
git show
git log
git log --all
glog
cat requirements.txt
git commit -m "Add pydantic for validations"
code pyproject.toml
pre-commit install\

pip install -r requirements.txt
pre-commit sample-config
code .pre-commit-config.yaml
ruff .
ruff
ruff check .
pre-commit
pre-commit autoupdate --repo https://github.com/pre-commit/pre-commit-hooks
pre-commit install
git add -p
code requirements-dev.txt
fastapi dev main.py
fastapi dev app/main.py
mv requirements-dev.txt ..
git add .
git commit -m "Remove dev requirements from remote"
mv ../requirements-dev.txt .
git restore .gitignore
vim .git/info/exclude
docker build --help
docker pull
docker pull alpine
docker pull python:alpine
docker pull python:3-alpine
docker scout quickview
docker scout recommendations local://eq-backend:latest
vim dockerfile
docker run -d --name eq-backend -p 80:80 myimage
docker --help
docker list
docker stop
docker stop 89e9014d4f36
docker run -itd --name eq-backend-api -p 80:80 eq-backend
docker kill 89e9014d4f36
docker run -d --name eq-backend-api -p 80:80 eq-backend
curl http://127.0.0.1:8000
docker build -t eq-backend .
docker exec -it eq-backend-api bash
docker stop eq-backend-api
docker ps
docker build -t eq-backend . && docker run -d --name eq-backend-api -p 80:80 eq-backend
tv --help
tv list-channels
tv env
echo ${HISTFILE:-${HOME}/.zsh_history}
cat ${HISTFILE:-${HOME}/.zsh_history}
cat default_channels.toml | grep HIST
sed '1!G;h;$!d' ${HISTFILE:-${HOME}/.zsh_history} | cut -d\";\" -f 2-
tv zsh
echo ${HISTFILE}
sed '1!G;h;$!d' ${HISTFILE} | cut -d\";\" -f 2-
sed '1!G;h;$!d' ${HISTFILE} | cut -d \";\" -f 2-
tail -r $HISTFILE
tail -r $HISTFILE | cut -d\";\" -f 2-
rm -fdr television
l
cd ~/.config/television
v
tail -r $HISTFILE 
tv zsh-history
tv brew
tv branches
source ~/.config/zsh/.zshrc
tv
tv dotfiles
vim default_channels.toml
vim config.toml
ya pkg list
brew install rich-cliu
brew install rich-cli
ya pkg add AnirudhG07/rich-preview\

cd ~/Code/apple
cd ~/Code/swift
cd sandbox
cat hello.swift
code hello.swift
brew reinstall swift
ln -s /opt/homebrew/opt/swift/Swift-6.0.xctoolchain ~/Library/Developer/Toolchains/Swift-6.0.xctoolchain
swift hello.swift
cd ~/Code/rust/event-tui
gstat
cargo run
tv init zsh
emacs ~/.config/zsh/.zshrc
nvim ~/.config/starship/starship.toml
pkill tmux
starship print-config | bat
echo $STARSHIP
echo $STARSHIP_CMD_STATUS
echo $STARSHIP_SHELL
starship time
starship init zsh
vim ~/.config/starship/starship.toml
touch ~/.config/starship/starship.toml
starship
starship print-config
nvim ~/.config/zsh/.zshrc | grep STAR
bat ~/.config/zsh/.zshrc | grep STAR
cat ~/.config/starship/starship.toml
vim .tmux.conf.local
brew reinstall starship
starship completions zsh
nvim $STARSHIP_CONFIG
ls ~/.config/starship
ls $STARSHIP_CONFIG
mv ~/.config/nvim ~/.config/nvim-bak
cd ~/.config/nvim
rm -fdr .git
vim lua/config/lazy.lua
nvim 
touch init.lua
code ~/.config/starship/starship.toml
vim natew/remap.lua
mkdir lua
mv natew lua
nvim lua/natew/remap.lua
nvim lua/natew/init.lua
brew install luarocks
mkdir lua/config
nvim lua/config/lazy.lua
nvim lua/plugins/spec.lua
rm -f lua/plugins/spec.lua
rm -fdr lua/plugins
mkdir natew
ls --tree
rm -fdr natew
cd ~/Documents/Themes/Dracula\ Pro/themes/vim/
cd ~/.config/
bin/nyoom upgrade
bin/nyoom sync
bin/nyoom install \
bin/nyoom sync
vim fnl/modules
git clone --depth 1 https://github.com/nyoom-engineering/nyoom.nvim.git ~/.config/nvim \
cd ~/.config/nvim/\
bin/nyoom install \
bin/nyoom sync
vim fnl/modules.fnl
brew install lazygit
brew upgrade
lt
vim 
nvim nvim
rm -fdr nyoom
ls gtk-3.0
mv dotfiles/neovim ~/.config/nvim
ls nvim
cd nvim
mv lua/marshmalon lua/natew
vim lua/natew/init.lua
vim lua/natew/lazy_init.lua
vim lua/natew/set.lua 
mkdir nvim
starship config
rm -f .config/starship/starship.toml.bak
echo $STARSHIP_CONFIG
cat $STARSHIP_CONFIG
~/.config/starship/starship.toml
touch $STARSHIP_CONFIG
~/.config/starship
ls plugin
brew install maven
nvim ~/.tmux.conf.local
cd .config/nvim
git clone --depth 1 https://github.com/wbthomason/packer.nvim\\
 ~/.local/share/nvim/site/pack/packer/start/packer.nvim
vim themes/dracula_pro/doc/dracula_pro.txt
ls /Users/natew/.config/nvim/themes/dracula_pro/INSTALL.md
nvim +'call mkdir(stdpath("data") .. "/site/pack/themes/start", "p")' +q
bat /Users/natew/.config/nvim/themes/dracula_pro/INSTALL.md
mv nvim nvim-bak
git clone https://github.com/LazyVim/starter ~/.config/nvim
ls dotfiles
git clone https://github.com/VVoruganti/dotfiles.git
cp -r dotfiles/neovim ~/.config/nvim
vim nvim/init.lua
vim ~/.config/zsh/.zshrc
vim .
cp -r nvim-bak/themes nvim/
vim nvim/themes
vim nvim
rm -fdr dotfiles
git clone https://github.com/nvim-lua/kickstart.nvim.git "${XDG_CONFIG_HOME:-$HOME/.config}"/nvim
rm -fdr nvim
git clone https://github.com/nvim-lua/kickstart.nvim.git ~/.config/nvim
ranger ~/Documents/Themes/Dracula\ Pro
cd ~/Documents/Themes/Dracula\ Pro
cp themes/vim ~/.config/nvim/dracula_pro
cp -r themes/vim ~/.config/nvim/dracula_pro
cd ~/.config/nvim/dracula_pro
mkdir themes
mv dracula_pro themes
ls themes
cd themes
cd ~/Documents/Themes/Dracula\ Pro/themes
nvim +'call mkdir(stdpath("data")."/site/pack/themes/start", "p")' +q
cp -r vim "$(nvim -es +'put =stdpath("data")' +print +'q!')"/site/pack/themes/start/dracula_pro
ls dracula_pro
pwd
...
bat nvim-bak/init.lua
bat nvim-bak/lua/natew/packer.lua
cat dracula_pro/doc/dracula_pro.txt
cat nvim-bak/dracula_pro/doc/dracula_pro.txt
ls nvim-bak/themes/dracula_pro/doc/
ls nvim-bak/themes/dracula_pro
ls nvim-bak/themes/dracula_pro/autoload
cat nvim-bak/themes/dracula_pro/doc/
cat nvim-bak/themes/dracula_pro/doc/dracula_pro.txt
cp -r nvim-bak/themes/dracula_pro nvim/themes
ls nvim/themes
mkdir -p nvim/themes/dracula_pro
mv nvim/themes nvim/themes/dracula_pro
ls nvim-bak/themes/dracula_pro/colors/dracula_pro_van_helsing.vim
cat nvim-bak/themes/dracula_pro/colors/dracula_pro_van_helsing.vim
cat nvim-bak/themes/dracula_pro/colors/dracula_pro_base.vim
ls nvim/themes/dracula_pro/
ranger
ls ~/Documents/Themes/Dracula\ Pro/themes/vim/
ranger nvim/themes/dracula_pro/
vim ~/.tmux.conf.local
source /Users/natew/.config/zsh/.zshrc && clear
cd .config
brew install grealpath
 TmuxNavigateRight
brew install 
brew install lazygit\

lazygit
cd -
vim init.lua
nvim /Users/natew/.config/starship/starship.toml 
tmux ps
tmux ls
tmux
nvim ~/.config/alacritty/alacritty.toml
nvim /Users/natew/Code/barbell-calculator 
nvim /Users/natew/Code/rust/counter-tui 
brew install chafa
fortune | cowsay | lolcat
\
\
echo "r/linuxmasterrace" | cowsay | lolcat -a\

man cowsay
cd
cd Downloads
cd Zen
cowsay -f ./call-duck.cow
fortune | cowsay -f ./call-duck.cow
convert -resize 50% call-duck.png call-duck.png
open call-duck.
open call-duck.png
convert -resize 50% call-duck.png call-duck.png && open call-duck.png
brew install fortune
fortune --help
fortune 
cowsay -I
cowsay -l
cowsay 
echo hello | cowsay
brew install cowsay-org/cowsay/cowsay-apj
brew tap cowsay-org/cowsay\
brew install cowsay-apj
brew install cowsasy
brew install cowsay
nvim /Users/natew/.config/yazi/yazi.toml 
yazi
nvim ~/.config/zsh/.zshrc
sourcez
fortune | cowsay -f moose
alias cowsay
fortune | cowsay
vim
  _      _      _
>(.)__ <(.)__ =(.)__
vim ducklings.cow
nvim elephant.cow
cowsay -f ./elephant.cow
vim /opt/homebrew/share/cowsay/cows/dragon.cow
!
fortune | cowsay -f ./elephant.cow
fortune | cowsay -f ./ducklings.cow
tldr fortune
man fortune
tmux a
nvim /Users/natew/Datatank/code/datatank 
nvim nvim/init.lua
nvim lua/kickstart/plugins/neo-tree.lua
nvim lua/custom/plugins/snacks.lua
nvim lua/custom/plugins/snacks.lua init.lua
nvim init.lua lua/custom/plugins/snacks.lua
git remote add origin https://github.com/nathanwhyte/.config.git\
git branch -M main\
git push -u origin main
cargo install --features lsp --locked taplo-cli
git fetch
pip install -r requirements-dev.txt
bin/activate
cd ~/Code/rust/counter-tui
nvim src/main.rs
cd ~/.config/nvim/
nvim lua/custom/plugins/lualine.lua 
nvim lua/custom/plugins/lualine.lua lua/custom/plugins/multicursor.lua
nvim lua/custom/plugins/lualine.lua
nvim init.lua
nvim init.lua lua/custom/plugins/snacks.lua 
..
git init
rm -fdr nvim-bak
ls
vim .gitignore
clear
vim ~/.config/ television/config.toml 
vim  television/config.toml 
tv config
nvim
tv 
tv git-repos
cd /Users/natew/Code/tws/equal-risk/backend 
s
source bin/activate
nvim .
nvim app/main.py
exit
tmux
ls
cd .config
nvim nvim/init.lua
nvim
lua --help
clear
cd .config/yazi
stylua yazi.toml
stylua init.lua
